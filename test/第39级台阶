import java.math.BigInteger;
import java.util.Collections;
import java.util.LinkedList;
import java.util.Scanner;

public class test {
	
	public static void main(String[] args) {//递归实现串的翻转
		/*Scanner scan = new Scanner(System.in);
		
		while( scan.hasNext()){
			String s = scan.nextLine();
			System.out.println(fan(s));
		}*/
		
		System.out.println(step( 0,39));
	}
	
	//t = 0 左脚,t  = 1右脚 ，该迈t脚，当前剩余num级
	public static int step (int t , int num){
		if(t == 0 && num == 0){
			return 1;
		}
		if( t == 1 && num == 0){
			return 0;
		}
		if( t == 0 && num == 1){
			return 0;
		}
		
		if( t == 1 && (num == 1 || num == 2)){
			return 1;
		}
		
		if( t == 0){
			return step( 1 , num - 1) + step ( 1 , num - 2);
		}
		else{
			return step( 0 , num - 1 ) + step ( 0 , num -2);
		}
	}
